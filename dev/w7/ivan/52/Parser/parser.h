// Generated by Bisonc++ V6.04.03 on Sun, 26 Mar 2023 00:06:58 +0100

#ifndef tnParser_h_included
#define tnParser_h_included

// $insert baseclass
#include "parserbase.h"
// $insert scanner.h
#include "../Scanner/scanner.h"

// $insert namespace-open
namespace tn
{


class Parser: public ParserBase
{
    // $insert scannerobject
    Scanner d_scanner;
        
    public:
        Parser() = default;
        int parse();

    private:
        void error();                   // called on (syntax) errors
        int lex();                      // returns the next token from the
                                        // lexical scanner. 
        void print();                   // use, e.g., d_token, d_loc
        void exceptionHandler(std::exception const &exc);

    // support functions for parse():
        void executeAction_(int ruleNr);
        void errorRecovery_();
        void nextCycle_();
        void nextToken_();
        void print_();
};

// $insert namespace-close
}

#endif
