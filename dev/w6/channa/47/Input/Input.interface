#ifndef SET6_INPUT_H
#define SET6_INPUT_H
                                // Class to interface between input stream and
                                // Scanner class generated by flexc++. Most
                                // code taken from a flexc++ generation for an
                                // unrelated lexer.
class Input
{

  std::deque<unsigned char> d_deque;  // pending input chars
  std::istream *d_in;                 // ptr for easy streamswitching
  size_t d_lineNr;                    // line count

  size_t d_offset = 0;

  enum
  {
    AT_EOF = -1
  };

  public:
    Input();
                                    // dynamically allocated iStream
    Input(std::istream *iStream, size_t lineNr = 1);
    size_t get();                   // the next character
    size_t lineNr() const;
    size_t lineOffset() const;
    size_t nPending() const;
    void setPending(size_t nPending);
    void reRead(size_t ch);         // push back 'ch' (if <= 0x100)
                                    // push back str from idx 'fmIdx'
    void reRead(std::string const &str, size_t fmIdx);

    void close();                 // delete dynamically allocated
  private:
    size_t next();                  // obtain the next character
};

#endif //SET6_INPUT_H
