In this exercise, we discuss the grammar ambiguities introduced by the following
grammar:
  %token NUMBER
  %%
  expr:
    NUMBER
  |
    number
  |
    expr '+' expr
  |
    expr '-' expr
  ;

  number:
    NUMBER
  ;

We correct the grammar (grammar1) to remove the conflicts with all the
priorities of the operators being the same.

We also correct the grammar (grammar2) file according to how bisonc++ would
implicitly fix them (i.e: making it right associative), and removing a specific
rule to resolve R/R conflicts.

Note: We only hand in Scanner.ih from the generated files from flexc++, as that
is the only file we modify from what it generates. We do not submit any
generated files from bisonc++ since we do not modify any of files it generates.
