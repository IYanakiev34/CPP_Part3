// Generated by Bisonc++ V6.04.03 on Mon, 03 Apr 2023 16:28:51 +0200

#ifndef Parser_h_included
#define Parser_h_included

// $insert baseclass
#include "Parserbase.h"
// $insert scanner.h
#include "../Scanner/Scanner.h"


class Parser :
  public ParserBase
{
    // $insert scannerobject
    Scanner d_scanner;
    Rules d_rules;

  public:
    Parser() = default;
    int parse();
    void printGrammarRules();

  private:
    void error();                   // called on (syntax) errors
    int lex();                      // returns the next token from the
                                    // lexical scanner.
    void print();                   // use, e.g., d_token, d_loc
    void exceptionHandler(std::exception const &exc);

    Production &addToProduction(Production &production);
    Rules &addToRules(Rule const &rule);
    std::vector<Production> &addToProductions(
      std::vector<Production> &productions, Production const &production
    );

                                  // support functions for parse():
    void executeAction_(int ruleNr);
    void errorRecovery_();
    void nextCycle_();
    void nextToken_();
    void print_();
};


#endif
